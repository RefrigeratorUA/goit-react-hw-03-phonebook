{"version":3,"sources":["ContactForm/ContactForm.js","PhonebookListItem/PhonebookListItem.js","PhonebookList/PhonebookList.js","Filter/Filter.js","App.js","index.js"],"names":["ContactForm","state","name","number","handleChange","event","target","value","setState","handleSubmit","preventDefault","onAddContact","props","this","onSubmit","className","type","onChange","disabled","Component","PhonebookListItem","id","onDelete","onClick","PhonebookList","contacts","map","el","Filter","onFilterChange","e","App","filter","handleAddContact","showNotification","contact","uuidv4","some","prevState","message","alert","handleFilter","getFilteredContacts","toLowerCase","includes","handleDeleteContact","localStorage","getItem","parsedContacts","JSON","parse","nowContacts","setItem","stringify","filteredContacts","length","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.64ef4b18.chunk.js","sourcesContent":["import { Component } from 'react';\nimport PropTypes from 'prop-types';\n// import styles from '../ContactForm/ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { name, number } = this.state;\n    const { onAddContact } = this.props;\n\n    onAddContact(name, number);\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <input\n            className=\"input\"\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n          ></input>\n        </label>\n        <label>\n          Number\n          <input\n            className=\"input\"\n            type=\"text\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleChange}\n          ></input>\n        </label>\n        <br />\n        <button className=\"btn\" type=\"submit\" disabled={!name && !number}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  name: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  number: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\n// import styles from '../PhonebookListItem/PhonebookListItem.module.css';\n\nconst PhonebookListItem = ({ name, number, id, onDelete }) => {\n  return (\n    <li className=\"list-item\">\n      {`${name}: `}\n      <span>{number}</span>\n      <button type=\"button\" id={id} onClick={event => onDelete(event.target.id)}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nPhonebookListItem.propTypes = {\n  name: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  number: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  id: PropTypes.string,\n};\n\nexport default PhonebookListItem;\n","import PropTypes from 'prop-types';\nimport PhonebookListItem from '../PhonebookListItem/PhonebookListItem';\n\nconst PhonebookList = ({ contacts, onDelete }) => {\n  return (\n    <ul className=\"list\">\n      {contacts.map(el => {\n        const { name, id, number } = el;\n        return (\n          <PhonebookListItem name={name} key={id} number={number} id={id} onDelete={onDelete} />\n        );\n      })}\n    </ul>\n  );\n};\n\nPhonebookList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      number: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    }),\n  ),\n  onDelete: PropTypes.func,\n};\n\nexport default PhonebookList;\n","import PropTypes from 'prop-types';\n\nconst Filter = ({ value, onFilterChange }) => {\n  return (\n    <div>\n      <p>Find contacts by name</p>\n      <input\n        className=\"input\"\n        type=\"text\"\n        value={value}\n        onChange={e => onFilterChange(e.target.value)}\n      ></input>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onFilterChange: PropTypes.func,\n};\n\nexport default Filter;\n","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './ContactForm/ContactForm';\nimport PhonebookList from './PhonebookList/PhonebookList';\nimport Filter from './Filter/Filter';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) this.setState({ contacts: parsedContacts });\n  }\n\n  componentDidUpdate(prevState) {\n    const { contacts: nowContacts } = this.state;\n    const { contacts: prevContacts } = prevState;\n    if (nowContacts !== prevContacts) {\n      localStorage.setItem('contacts', JSON.stringify(nowContacts));\n    }\n  }\n\n  handleAddContact = (name, number) => {\n    if (!name) return this.showNotification('Please enter contact name.');\n    if (!number) return this.showNotification('Please enter contact number.');\n\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    const { contacts } = this.state;\n    const hasPresent = contacts.some(contact => contact.name === name);\n\n    hasPresent\n      ? this.showNotification(`${name} is already in contacts.`)\n      : this.setState(prevState => {\n          return { contacts: [...prevState.contacts, contact] };\n        });\n  };\n\n  showNotification = message => alert(message);\n\n  handleFilter = filter => {\n    this.setState({ filter });\n  };\n\n  getFilteredContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(el => el.name.toLowerCase().includes(filter.toLowerCase()));\n  };\n\n  handleDeleteContact = id => {\n    const { contacts } = this.state;\n    this.setState({ contacts: [...contacts.filter(el => el.id !== id)] });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const filteredContacts = this.getFilteredContacts();\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm onAddContact={this.handleAddContact} />\n        <h2>Contacts</h2>\n        {contacts.length > 1 && <Filter value={filter} onFilterChange={this.handleFilter} />}\n        {filteredContacts.length > 0 && (\n          <PhonebookList contacts={filteredContacts} onDelete={this.handleDeleteContact} />\n        )}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}