{"version":3,"sources":["ContactForm/ContactForm.js","PhonebookListItem/PhonebookListItem.js","PhonebookList/PhonebookList.js","Filter/Filter.js","App.js","index.js"],"names":["ContactForm","state","name","props","number","handleChange","event","target","value","setState","handleSubmit","preventDefault","onAddContact","this","onSubmit","className","type","onChange","disabled","Component","defaultProps","PhonebookListItem","id","onDelete","onClick","PhonebookList","contacts","map","el","Filter","onFilterChange","e","App","filter","handleAddContact","nameFromForm","numberFromForm","isPresent","contact","uuidv4","forEach","alert","prevState","handleFilter","getFilteredContacts","toLowerCase","includes","handleDeleteContact","localStorage","getItem","parsedContacts","JSON","parse","nowContacts","setItem","stringify","filteredContacts","length","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.5269604a.chunk.js","sourcesContent":["import { Component } from 'react';\nimport PropTypes from 'prop-types';\n// import styles from '../ContactForm/ContactForm.module.css';\n\nclass ContactForm extends Component {\n  static defaultProps = {\n    name: '',\n    number: '',\n  };\n  state = {\n    name: this.props.name,\n    number: this.props.number,\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { name, number } = this.state;\n\n    this.props.onAddContact(name, number);\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <input\n            className=\"input\"\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n          ></input>\n        </label>\n        <label>\n          Number\n          <input\n            className=\"input\"\n            type=\"text\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleChange}\n          ></input>\n        </label>\n        <br />\n        <button className=\"btn\" type=\"submit\" disabled={!name || !number}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  name: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  number: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\n// import styles from '../PhonebookListItem/PhonebookListItem.module.css';\n\nconst PhonebookListItem = ({ name, number, id, onDelete }) => {\n  return (\n    <li className=\"list-item\">\n      {`${name}: `}\n      <span>{number}</span>\n      <button type=\"button\" id={id} onClick={event => onDelete(event.target.id)}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nPhonebookListItem.propTypes = {\n  name: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  number: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  id: PropTypes.string,\n};\n\nexport default PhonebookListItem;\n","import PropTypes from 'prop-types';\nimport PhonebookListItem from '../PhonebookListItem/PhonebookListItem';\n\nconst PhonebookList = ({ contacts, onDelete }) => {\n  return (\n    <ul className=\"list\">\n      {contacts.map(el => {\n        const { name, id, number } = el;\n        return (\n          <PhonebookListItem name={name} key={id} number={number} id={id} onDelete={onDelete} />\n        );\n      })}\n    </ul>\n  );\n};\n\nPhonebookList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      number: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    }),\n  ),\n  onDelete: PropTypes.func,\n};\n\nexport default PhonebookList;\n","import PropTypes from 'prop-types';\n\nconst Filter = ({ value, onFilterChange }) => {\n  return (\n    <div>\n      <p>Find contacts by name</p>\n      <input\n        className=\"input\"\n        type=\"text\"\n        value={value}\n        onChange={e => onFilterChange(e.target.value)}\n      ></input>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onFilterChange: PropTypes.func,\n};\n\nexport default Filter;\n","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './ContactForm/ContactForm';\nimport PhonebookList from './PhonebookList/PhonebookList';\nimport Filter from './Filter/Filter';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  getSnapshotBeforeUpdate() {\n    return { name: 'hi!' };\n  }\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) this.setState({ contacts: parsedContacts });\n  }\n\n  componentDidUpdate(prevState) {\n    const { contacts: nowContacts } = this.state;\n    const { contacts: prevContacts } = prevState;\n    if (nowContacts !== prevContacts) {\n      localStorage.setItem('contacts', JSON.stringify(nowContacts));\n    }\n  }\n\n  handleAddContact = (nameFromForm, numberFromForm) => {\n    let isPresent = false;\n    const contact = {\n      id: uuidv4(),\n      name: nameFromForm,\n      number: numberFromForm,\n    };\n    const { contacts } = this.state;\n    contacts.forEach(el => {\n      if (el.name === contact.name) {\n        alert(`${el.name} is already in contacts.`);\n        isPresent = true;\n        return;\n      }\n    });\n\n    if (isPresent) return;\n    this.setState(prevState => {\n      return { contacts: [...prevState.contacts, contact] };\n    });\n  };\n\n  handleFilter = filter => {\n    this.setState({ filter });\n  };\n\n  getFilteredContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(el => el.name.toLowerCase().includes(filter.toLowerCase()));\n  };\n\n  handleDeleteContact = id => {\n    const { contacts } = this.state;\n    this.setState({ contacts: [...contacts.filter(el => el.id !== id)] });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const filteredContacts = this.getFilteredContacts();\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm onAddContact={this.handleAddContact} />\n        <h2>Contacts</h2>\n        {contacts.length > 1 && <Filter value={filter} onFilterChange={this.handleFilter} />}\n        {filteredContacts.length > 0 && (\n          <PhonebookList contacts={filteredContacts} onDelete={this.handleDeleteContact} />\n        )}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}